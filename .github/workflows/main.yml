# This is a basic workflow to help you get started with Actions

name: MarkdownParse JUnit Tests
#original name: CI (continuous integration)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push: #!!!run on push to repo
    branches: [ main ]
  pull_request: #!!!pull_request is another way to update a repo
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  #!!! github Action starts up a server to run our action
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest #!!!ubuntu is free+popular Linux version (similar to ieng6)

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project. #print the arguments
          
          javac -cp .:lib/junit-4.13.2.jar:lib/hamcrest-core-1.3.jar MarkdownParseTest.java MarkdownParse.java
          java -cp .:lib/junit-4.13.2.jar:lib/hamcrest-core-1.3.jar org.junit.runner.JUnitCore MarkdownParseTest
          
